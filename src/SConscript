#******************************************************************************
# Copyright (c) 2013-2014, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#*****************************************************************************

Import('gateway_env')
import os

if not gateway_env.has_key('_ALLJOYNCORE_'):
    gateway_env.Append(LIBS = ['alljoyn'])
    if gateway_env['OS'] == 'openwrt':
        gateway_env.AppendUnique(LIBS = [ 'stdc++', 'pthread', 'gcc_s' ])
    if gateway_env['OS'] == 'linux':
        gateway_env.AppendUnique(LIBS = [ 'pthread' ])


# Muzzley connector build flags
gateway_env.Append(CPPPATH = ['$LIBXML2_INCDIR', '$LIBGLIB_INCDIR', '$LIBMOSQUITTO_INCDIR', 
 						      '$LIBGUPNP_INCDIR', '$LIBGSSDP_INCDIR', '$LIBCURL_INCDIR',
 						      '$RAPIDJSON_INCDIR', '.'])

gateway_env.Append(LIBPATH = ['$LIBXML2_LIBDIR', '$LIBMOSQUITTO_LIBDIR', '.'])

gateway_env.Append(CPPFLAGS = [ '-Wall', '-pipe', '-std=c++0x', '-fno-exceptions', '-Wno-long-long',
						      '-Wno-deprecated', '-DDEBUG', '-g3', '-g', '-DQCC_OS_LINUX', 
						      '-DQCC_OS_GROUP_POSIX', '-fexceptions'])


gateway_env.Append(LIBS = ['ssl', 'crypto', 'resolv', 'rt', 'z', 'c', 'uuid'])
gateway_env.Append(LIBS = ['mosquitto', 'libglib-2.0', 'libsoup-2.4', 'libgupnp-1.0', 'libgssdp-1.0', 'curl'])
gateway_env.Prepend(LIBS = ['alljoyn_gwconnector','alljoyn_config', 'alljoyn_notification', 'alljoyn_about', 'alljoyn_services_common', 'alljoyn'])

if gateway_env['CPU'] == 'arm':
    gateway_env.Append(CPPFLAGS=['-llzma'])

if gateway_env['NO_AJ_GATEWAY'] == True:
    gateway_env.Append(CPPFLAGS=['-DNO_AJ_GATEWAY'])


# Compile source files
srcs = gateway_env.Glob('*.cc')
srcs.extend(gateway_env.Glob('transport/*.cc'))
srcs.extend(gateway_env.Glob('transport/*.cpp'))
srcs.extend(gateway_env.Glob('common/*.cc'))
srcs.extend(gateway_env.Glob('common/*.cpp'))
srcs.extend(gateway_env.Glob('app/*.cc'))
srcs.extend(gateway_env.Glob('app/*.cpp'))
objs = gateway_env.Object(srcs)

gateway_env.Append(CCFLAGS = ['-Wno-deprecated-declarations'])

prog = gateway_env.Program('muzzleyconn', objs)

Return('prog')

